{
  "format_version": "1.18.10",
  "minecraft:entity": {
    "description": {
      "identifier": "minecraft:player",
      "is_spawnable": false,
      "is_summonable": false,
      "is_experimental": false,
      "animations": {
        "blocking": "controller.animation.player.mcwl.molangquery.blocking",
        "can_climb": "controller.animation.player.mcwl.molangquery.can_climb",
        "can_damage_nearby_mobs": "controller.animation.player.mcwl.molangquery.can_damage_nearby_mobs",
        "can_fly": "controller.animation.player.mcwl.molangquery.can_fly",
        "can_power_jump": "controller.animation.player.mcwl.molangquery.can_power_jump",
        "can_swim": "controller.animation.player.mcwl.molangquery.can_swim",
        "can_walk": "controller.animation.player.mcwl.molangquery.can_walk",
        "facing_target_to_range_attack": "controller.animation.player.mcwl.molangquery.facing_target_to_range_attack",
        "has_cape": "controller.animation.player.mcwl.molangquery.has_cape",
        "has_collision": "controller.animation.player.mcwl.molangquery.has_collision",
        "has_gravity": "controller.animation.player.mcwl.molangquery.has_gravity",
        "has_rider": "controller.animation.player.mcwl.molangquery.has_rider",
        "has_target": "controller.animation.player.mcwl.molangquery.has_target",
        "is_admiring": "controller.animation.player.mcwl.molangquery.is_admiring",
        "is_alive": "controller.animation.player.mcwl.molangquery.is_alive",
        "is_angry": "controller.animation.player.mcwl.molangquery.is_angry",
        "is_attached_to_entity": "controller.animation.player.mcwl.molangquery.is_attached_to_entity",
        "is_avoiding_block": "controller.animation.player.mcwl.molangquery.is_avoiding_block",
        "is_avoiding_mobs": "controller.animation.player.mcwl.molangquery.is_avoiding_mobs",
        "is_baby": "controller.animation.player.mcwl.molangquery.is_baby",
        "is_breathing": "controller.animation.player.mcwl.molangquery.is_breathing",
        "is_bribed": "controller.animation.player.mcwl.molangquery.is_bribed",
        "is_carrying_block": "controller.animation.player.mcwl.molangquery.is_carrying_block",
        "is_casting": "controller.animation.player.mcwl.molangquery.is_casting",
        "is_celebrating": "controller.animation.player.mcwl.molangquery.is_celebrating",
        "is_celebrating_special": "controller.animation.player.mcwl.molangquery.is_celebrating_special",
        "is_charged": "controller.animation.player.mcwl.molangquery.is_charged",
        "is_charging": "controller.animation.player.mcwl.molangquery.is_charging",
        "is_chested": "controller.animation.player.mcwl.molangquery.is_chested",
        "is_critical": "controller.animation.player.mcwl.molangquery.is_critical",
        "is_croaking": "controller.animation.player.mcwl.molangquery.is_croaking",
        "is_dancing": "controller.animation.player.mcwl.molangquery.is_dancing",
        "is_delayed_attacking": "controller.animation.player.mcwl.molangquery.is_delayed_attacking",
        "is_eating": "controller.animation.player.mcwl.molangquery.is_eating",
        "is_eating_mob": "controller.animation.player.mcwl.molangquery.is_eating_mob",
        "is_elder": "controller.animation.player.mcwl.molangquery.is_elder",
        "is_emoting": "controller.animation.player.mcwl.molangquery.is_emoting",
        "is_enchanted": "controller.animation.player.mcwl.molangquery.is_enchanted",
        "is_fire_immune": "controller.animation.player.mcwl.molangquery.is_fire_immune",
        "is_first_person": "controller.animation.player.mcwl.molangquery.is_first_person",
        "is_ghost": "controller.animation.player.mcwl.molangquery.is_ghost",
        "is_gliding": "controller.animation.player.mcwl.molangquery.is_gliding",
        "is_grazing": "controller.animation.player.mcwl.molangquery.is_grazing",
        "is_idling": "controller.animation.player.mcwl.molangquery.is_idling",
        "is_ignited": "controller.animation.player.mcwl.molangquery.is_ignited",
        "is_illager_captain": "controller.animation.player.mcwl.molangquery.is_illager_captain",
        "is_in_contact_with_water": "controller.animation.player.mcwl.molangquery.is_in_contact_with_water",
        "is_in_love": "controller.animation.player.mcwl.molangquery.is_in_love",
        "is_in_ui": "controller.animation.player.mcwl.molangquery.is_in_ui",
        "is_in_water": "controller.animation.player.mcwl.molangquery.is_in_water",
        "is_in_water_or_rain": "controller.animation.player.mcwl.molangquery.is_in_water_or_rain",
        "is_interested": "controller.animation.player.mcwl.molangquery.is_interested",
        "is_invisible": "controller.animation.player.mcwl.molangquery.is_invisible",
        "is_jumping": "controller.animation.player.mcwl.molangquery.is_jumping",
        "is_laying_down": "controller.animation.player.mcwl.molangquery.is_laying_down",
        "is_laying_egg": "controller.animation.player.mcwl.molangquery.is_laying_egg",
        "is_leashed": "controller.animation.player.mcwl.molangquery.is_leashed",
        "is_levitating": "controller.animation.player.mcwl.molangquery.is_levitating",
        "is_lingering": "controller.animation.player.mcwl.molangquery.is_lingering",
        "is_on_fire": "controller.animation.player.mcwl.molangquery.is_on_fire",
        "is_on_ground": "controller.animation.player.mcwl.molangquery.is_on_ground",
        "is_on_screen": "controller.animation.player.mcwl.molangquery.is_on_screen",
        "is_orphaned": "controller.animation.player.mcwl.molangquery.is_orphaned",
        "is_persona_or_premium_skin": "controller.animation.player.mcwl.molangquery.is_persona_or_premium_skin",
        "is_playing_dead": "controller.animation.player.mcwl.molangquery.is_playing_dead",
        "is_powered": "controller.animation.player.mcwl.molangquery.is_powered",
        "is_pregnant": "controller.animation.player.mcwl.molangquery.is_pregnant",
        "is_ram_attacking": "controller.animation.player.mcwl.molangquery.is_ram_attacking",
        "is_resting": "controller.animation.player.mcwl.molangquery.is_resting",
        "is_riding": "controller.animation.player.mcwl.molangquery.is_riding",
        "is_roaring": "controller.animation.player.mcwl.molangquery.is_roaring",
        "is_rolling": "controller.animation.player.mcwl.molangquery.is_rolling",
        "is_saddled": "controller.animation.player.mcwl.molangquery.is_saddled",
        "is_scared": "controller.animation.player.mcwl.molangquery.is_scared",
        "is_selected_item": "controller.animation.player.mcwl.molangquery.is_selected_item",
        "is_shaking": "controller.animation.player.mcwl.molangquery.is_shaking",
        "is_shaking_wetness": "controller.animation.player.mcwl.molangquery.is_shaking_wetness",
        "is_sheared": "controller.animation.player.mcwl.molangquery.is_sheared",
        "is_shield_powered": "controller.animation.player.mcwl.molangquery.is_shield_powered",
        "is_silent": "controller.animation.player.mcwl.molangquery.is_silent",
        "is_sitting": "controller.animation.player.mcwl.molangquery.is_sitting",
        "is_sleeping": "controller.animation.player.mcwl.molangquery.is_sleeping",
        "is_sneaking": "controller.animation.player.mcwl.molangquery.is_sneaking",
        "is_sneezing": "controller.animation.player.mcwl.molangquery.is_sneezing",
        "is_sprinting": "controller.animation.player.mcwl.molangquery.is_sprinting",
        "is_stackable": "controller.animation.player.mcwl.molangquery.is_stackable",
        "is_stalking": "controller.animation.player.mcwl.molangquery.is_stalking",
        "is_standing": "controller.animation.player.mcwl.molangquery.is_standing",
        "is_stunned": "controller.animation.player.mcwl.molangquery.is_stunned",
        "is_swimming": "controller.animation.player.mcwl.molangquery.is_swimming",
        "is_tamed": "controller.animation.player.mcwl.molangquery.is_tamed",
        "is_transforming": "controller.animation.player.mcwl.molangquery.is_transforming",
        "is_using_item": "controller.animation.player.mcwl.molangquery.is_using_item",
        "is_wall_climbing": "controller.animation.player.mcwl.molangquery.is_wall_climbing",
        "out_of_control": "controller.animation.player.mcwl.molangquery.out_of_control",
        "show_bottom": "controller.animation.player.mcwl.molangquery.show_bottom",

        "health_0": "controller.animation.player.mcwl.molangquery.health.0",
        "health_1": "controller.animation.player.mcwl.molangquery.health.1",
        "health_2": "controller.animation.player.mcwl.molangquery.health.2",
        "health_3": "controller.animation.player.mcwl.molangquery.health.3",
        "health_4": "controller.animation.player.mcwl.molangquery.health.4"
      },
      "scripts": {
        "animate": [
          "blocking",
          "can_climb",
          "can_damage_nearby_mobs",
          "can_fly",
          "can_power_jump",
          "can_swim",
          "can_walk",
          "facing_target_to_range_attack",
          "has_cape",
          "has_collision",
          "has_gravity",
          "has_rider",
          "has_target",
          "is_admiring",
          "is_alive",
          "is_angry",
          "is_attached_to_entity",
          "is_avoiding_block",
          "is_avoiding_mobs",
          "is_baby",
          "is_breathing",
          "is_bribed",
          "is_carrying_block",
          "is_casting",
          "is_celebrating",
          "is_celebrating_special",
          "is_charged",
          "is_charging",
          "is_chested",
          "is_critical",
          "is_croaking",
          "is_dancing",
          "is_delayed_attacking",
          "is_eating",
          "is_eating_mob",
          "is_elder",
          "is_emoting",
          "is_enchanted",
          "is_fire_immune",
          "is_first_person",
          "is_ghost",
          "is_gliding",
          "is_grazing",
          "is_idling",
          "is_ignited",
          "is_illager_captain",
          "is_in_contact_with_water",
          "is_in_love",
          "is_in_ui",
          "is_in_water",
          "is_in_water_or_rain",
          "is_interested",
          "is_invisible",
          "is_jumping",
          "is_laying_down",
          "is_laying_egg",
          "is_leashed",
          "is_levitating",
          "is_lingering",
          "is_on_fire",
          "is_on_ground",
          "is_on_screen",
          "is_orphaned",
          "is_persona_or_premium_skin",
          "is_playing_dead",
          "is_powered",
          "is_pregnant",
          "is_ram_attacking",
          "is_resting",
          "is_riding",
          "is_roaring",
          "is_rolling",
          "is_saddled",
          "is_scared",
          "is_selected_item",
          "is_shaking",
          "is_shaking_wetness",
          "is_sheared",
          "is_shield_powered",
          "is_silent",
          "is_sitting",
          "is_sleeping",
          "is_sneaking",
          "is_sneezing",
          "is_sprinting",
          "is_stackable",
          "is_stalking",
          "is_standing",
          "is_stunned",
          "is_swimming",
          "is_tamed",
          "is_transforming",
          "is_using_item",
          "is_wall_climbing",
          "out_of_control",
          "show_bottom",

          "health_0",
          "health_1",
          "health_2",
          "health_3",
          "health_4"
        ]
      }
    },

    "component_groups": {
      "minecraft:add_bad_omen": {
        "minecraft:spell_effects": {
          "add_effects": [
            {
              "effect": "bad_omen",
              "duration": 6000,
              "visible": false,
              "display_on_screen_animation": true
            }
          ]
        },
        "minecraft:timer": {
          "time": [0.0, 0.0],
          "looping": false,
          "time_down_event": {
            "event": "minecraft:clear_add_bad_omen",
            "target": "self"
          }
        }
      },
      "minecraft:clear_bad_omen_spell_effect": {
        "minecraft:spell_effects": {}
      },
      "minecraft:raid_trigger": {
        "minecraft:raid_trigger": {
          "triggered_event": {
            "event": "minecraft:remove_raid_trigger",
            "target": "self"
          }
        },
        "minecraft:spell_effects": {
          "remove_effects": "bad_omen"
        }
      }
    },

    "components": {
      "minecraft:experience_reward": {
        "on_death": "Math.Min(query.player_level * 7, 100)"
      },
      "minecraft:type_family": {
        "family": ["player"]
      },
      "minecraft:is_hidden_when_invisible": {},
      "minecraft:loot": {
        "table": "loot_tables/empty.json"
      },
      "minecraft:collision_box": {
        "width": 0.6,
        "height": 1.8
      },
      "minecraft:can_climb": {},
      "minecraft:movement": {
        "value": 0.1
      },
      "minecraft:hurt_on_condition": {
        "damage_conditions": [
          {
            "filters": {
              "test": "in_lava",
              "subject": "self",
              "operator": "==",
              "value": true
            },
            "cause": "lava",
            "damage_per_tick": 4
          }
        ]
      },
      "minecraft:attack": {
        "damage": 1
      },
      "minecraft:player.saturation": {
        "value": 20
      },
      "minecraft:player.exhaustion": {
        "value": 0,
        "max": 4
      },
      "minecraft:player.level": {
        "value": 0,
        "max": 24791
      },
      "minecraft:player.experience": {
        "value": 0,
        "max": 1
      },
      "minecraft:breathable": {
        "total_supply": 15,
        "suffocate_time": -1,
        "inhale_time": 3.75,
        "generates_bubbles": false
      },
      "minecraft:nameable": {
        "always_show": true,
        "allow_name_tag_renaming": false
      },
      "minecraft:physics": {},
      "minecraft:pushable": {
        "is_pushable": false,
        "is_pushable_by_piston": true
      },
      "minecraft:insomnia": {
        "days_until_insomnia": 3
      },
      "minecraft:rideable": {
        "seat_count": 2,
        "family_types": ["parrot_tame"],
        "pull_in_entities": true,
        "seats": [
          {
            "position": [0.4, -0.2, -0.1],
            "min_rider_count": 0,
            "max_rider_count": 0,
            "lock_rider_rotation": 0
          },
          {
            "position": [-0.4, -0.2, -0.1],
            "min_rider_count": 1,
            "max_rider_count": 2,
            "lock_rider_rotation": 0
          }
        ]
      },
      "minecraft:conditional_bandwidth_optimization": {},
      "minecraft:block_climber": {},
      "minecraft:damage_sensor": {
        "triggers": [
          {
            "cause": "anvil",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:anvil_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "block_explosion",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:block_explosion_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "contact",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:contact_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "drowning",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:drowning_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "entity_explosion",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:entity_explosion_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "fall",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:fall_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "falling_block",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:falling_block_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "fire",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:fire_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "fire_tick",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:fire_tick_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "fly_into_wall",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:fly_into_wall_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "lava",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:lava_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "magic",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:magic_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "override",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:override_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "piston",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:piston_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "projectile",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:projectile_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "stalactite",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:stalactite_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "stalagmite",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:stalagmite_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "starve",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:starve_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "suffocation",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:suffocation_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "suicide",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:suicide_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "thorns",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:thorns_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "void",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:void_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "wither",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:wither_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "attack",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:attack_damage_self:void",
              "target": "self"
            }
          },
          {
            "cause": "none",
            "on_damage": {
              "filters": {
                "test": "has_damage",
                "subject": "self",
                "value": "fatal"
              },
              "event": "mcwl:molangquery:none_damage_self:void",
              "target": "self"
            }
          }
        ]
      },

      "minecraft:environment_sensor": {
        "triggers": [
          {
            "filters": {
              "all_of": [
                {
                  "test": "has_mob_effect",
                  "subject": "self",
                  "value": "bad_omen"
                },
                {
                  "test": "is_in_village",
                  "subject": "self",
                  "value": true
                }
              ]
            },
            "event": "mcwl:molangquery:raid_triggered:void"
          }
        ]
      }
    },

    "events": {
      "mcwl:molangquery:fatal_damage_armor_stand:void": {},
      "mcwl:molangquery:fatal_damage_axolotl:void": {},
      "mcwl:molangquery:fatal_damage_bat:void": {},
      "mcwl:molangquery:fatal_damage_bee:void": {},
      "mcwl:molangquery:fatal_damage_blaze:void": {},
      "mcwl:molangquery:fatal_damage_boat:void": {},
      "mcwl:molangquery:fatal_damage_cat:void": {},
      "mcwl:molangquery:fatal_damage_cave_spider:void": {},
      "mcwl:molangquery:fatal_damage_chest_minecart:void": {},
      "mcwl:molangquery:fatal_damage_chicken:void": {},
      "mcwl:molangquery:fatal_damage_command_block_minecart:void": {},
      "mcwl:molangquery:fatal_damage_cow:void": {},
      "mcwl:molangquery:fatal_damage_creeper:void": {},
      "mcwl:molangquery:fatal_damage_dolphin:void": {},
      "mcwl:molangquery:fatal_damage_donkey:void": {},
      "mcwl:molangquery:fatal_damage_drowned:void": {},
      "mcwl:molangquery:fatal_damage_elder_guardian:void": {},
      "mcwl:molangquery:fatal_damage_enderman:void": {},
      "mcwl:molangquery:fatal_damage_endermite:void": {},
      "mcwl:molangquery:fatal_damage_ender_crystal:void": {},
      "mcwl:molangquery:fatal_damage_ender_dragon:void": {},
      "mcwl:molangquery:fatal_damage_evocation_illager:void": {},
      "mcwl:molangquery:fatal_damage_fish:void": {},
      "mcwl:molangquery:fatal_damage_fox:void": {},
      "mcwl:molangquery:fatal_damage_ghast:void": {},
      "mcwl:molangquery:fatal_damage_glow_squid:void": {},
      "mcwl:molangquery:fatal_damage_goat:void": {},
      "mcwl:molangquery:fatal_damage_guardian:void": {},
      "mcwl:molangquery:fatal_damage_hoglin:void": {},
      "mcwl:molangquery:fatal_damage_hopper_minecart:void": {},
      "mcwl:molangquery:fatal_damage_horse:void": {},
      "mcwl:molangquery:fatal_damage_husk:void": {},
      "mcwl:molangquery:fatal_damage_iron_golem:void": {},
      "mcwl:molangquery:fatal_damage_llama:void": {},
      "mcwl:molangquery:fatal_damage_magma_cube:void": {},
      "mcwl:molangquery:fatal_damage_minecart:void": {},
      "mcwl:molangquery:fatal_damage_mooshroom:void": {},
      "mcwl:molangquery:fatal_damage_mule:void": {},
      "mcwl:molangquery:fatal_damage_npc:void": {},
      "mcwl:molangquery:fatal_damage_ocelot:void": {},
      "mcwl:molangquery:fatal_damage_panda:void": {},
      "mcwl:molangquery:fatal_damage_parrot:void": {},
      "mcwl:molangquery:fatal_damage_phantom:void": {},
      "mcwl:molangquery:fatal_damage_pig:void": {},
      "mcwl:molangquery:fatal_damage_piglin:void": {},
      "mcwl:molangquery:fatal_damage_piglin_brute:void": {},
      "mcwl:molangquery:fatal_damage_pillager:void": {},
      "mcwl:molangquery:fatal_damage_pillager_captain:void": {},
      "mcwl:molangquery:fatal_damage_player:void": {},
      "mcwl:molangquery:fatal_damage_polar_bear:void": {},
      "mcwl:molangquery:fatal_damage_pufferfish:void": {},
      "mcwl:molangquery:fatal_damage_rabbit:void": {},
      "mcwl:molangquery:fatal_damage_ravager:void": {},
      "mcwl:molangquery:fatal_damage_salmon:void": {},
      "mcwl:molangquery:fatal_damage_sheep:void": {},
      "mcwl:molangquery:fatal_damage_shulker:void": {},
      "mcwl:molangquery:fatal_damage_shulker_bullet:void": {},
      "mcwl:molangquery:fatal_damage_silverfish:void": {},
      "mcwl:molangquery:fatal_damage_skeleton:void": {},
      "mcwl:molangquery:fatal_damage_skeleton_horse:void": {},
      "mcwl:molangquery:fatal_damage_slime:void": {},
      "mcwl:molangquery:fatal_damage_snow_golem:void": {},
      "mcwl:molangquery:fatal_damage_spider:void": {},
      "mcwl:molangquery:fatal_damage_squid:void": {},
      "mcwl:molangquery:fatal_damage_stray:void": {},
      "mcwl:molangquery:fatal_damage_strider:void": {},
      "mcwl:molangquery:fatal_damage_tnt_minecart:void": {},
      "mcwl:molangquery:fatal_damage_tripod_camera:void": {},
      "mcwl:molangquery:fatal_damage_tropicalfish:void": {},
      "mcwl:molangquery:fatal_damage_turtle:void": {},
      "mcwl:molangquery:fatal_damage_vex:void": {},
      "mcwl:molangquery:fatal_damage_villager:void": {},
      "mcwl:molangquery:fatal_damage_villager_v2:void": {},
      "mcwl:molangquery:fatal_damage_vindicator:void": {},
      "mcwl:molangquery:fatal_damage_wandering_trader:void": {},
      "mcwl:molangquery:fatal_damage_witch:void": {},
      "mcwl:molangquery:fatal_damage_wither:void": {},
      "mcwl:molangquery:fatal_damage_wither_skeleton:void": {},
      "mcwl:molangquery:fatal_damage_wolf:void": {},
      "mcwl:molangquery:fatal_damage_zoglin:void": {},
      "mcwl:molangquery:fatal_damage_zombie:void": {},
      "mcwl:molangquery:fatal_damage_zombie_horse:void": {},
      "mcwl:molangquery:fatal_damage_zombie_pigman:void": {},
      "mcwl:molangquery:fatal_damage_zombie_villager:void": {},
      "mcwl:molangquery:fatal_damage_zombie_villager_v2:void": {},

      "mcwl:molangquery:anvil_damage_self:void": {},
      "mcwl:molangquery:attack_damage_self:void": {},
      "mcwl:molangquery:block_explosion_damage_self:void": {},
      "mcwl:molangquery:contact_damage_self:void": {},
      "mcwl:molangquery:drowning_damage_self:void": {},
      "mcwl:molangquery:entity_explosion_damage_self:void": {},
      "mcwl:molangquery:fall_damage_self:void": {},
      "mcwl:molangquery:falling_block_damage_self:void": {},
      "mcwl:molangquery:fatal_damage_self:void": {},
      "mcwl:molangquery:fire_damage_self:void": {},
      "mcwl:molangquery:fire_tick_damage_self:void": {},
      "mcwl:molangquery:fly_into_wall_damage_self:void": {},
      "mcwl:molangquery:lava_damage_self:void": {},
      "mcwl:molangquery:magic_damage_self:void": {},
      "mcwl:molangquery:none_damage_self:void": {},
      "mcwl:molangquery:override_damage_self:void": {},
      "mcwl:molangquery:piston_damage_self:void": {},
      "mcwl:molangquery:projectile_damage_self:void": {},
      "mcwl:molangquery:stalactite_damage_self:void": {},
      "mcwl:molangquery:stalagmite_damage_self:void": {},
      "mcwl:molangquery:starve_damage_self:void": {},
      "mcwl:molangquery:suffocation_damage_self:void": {},
      "mcwl:molangquery:suicide_damage_self:void": {},
      "mcwl:molangquery:thorns_damage_self:void": {},
      "mcwl:molangquery:void_damage_self:void": {},
      "mcwl:molangquery:wither_damage_self:void": {},

      "mcwl:molangquery:raid_triggered:void": {},
      "mcwl:molangquery:blocking:bool:true": {},
      "mcwl:molangquery:blocking:bool:false": {},
      "mcwl:molangquery:can_climb:bool:true": {},
      "mcwl:molangquery:can_climb:bool:false": {},
      "mcwl:molangquery:can_damage_nearby_mobs:bool:true": {},
      "mcwl:molangquery:can_damage_nearby_mobs:bool:false": {},
      "mcwl:molangquery:can_fly:bool:true": {},
      "mcwl:molangquery:can_fly:bool:false": {},
      "mcwl:molangquery:can_power_jump:bool:true": {},
      "mcwl:molangquery:can_power_jump:bool:false": {},
      "mcwl:molangquery:can_swim:bool:true": {},
      "mcwl:molangquery:can_swim:bool:false": {},
      "mcwl:molangquery:can_walk:bool:true": {},
      "mcwl:molangquery:can_walk:bool:false": {},
      "mcwl:molangquery:facing_target_to_range_attack:bool:true": {},
      "mcwl:molangquery:facing_target_to_range_attack:bool:false": {},
      "mcwl:molangquery:has_cape:bool:true": {},
      "mcwl:molangquery:has_cape:bool:false": {},
      "mcwl:molangquery:has_collision:bool:true": {},
      "mcwl:molangquery:has_collision:bool:false": {},
      "mcwl:molangquery:has_gravity:bool:true": {},
      "mcwl:molangquery:has_gravity:bool:false": {},
      "mcwl:molangquery:has_rider:bool:true": {},
      "mcwl:molangquery:has_rider:bool:false": {},
      "mcwl:molangquery:has_target:bool:true": {},
      "mcwl:molangquery:has_target:bool:false": {},
      "mcwl:molangquery:is_admiring:bool:true": {},
      "mcwl:molangquery:is_admiring:bool:false": {},
      "mcwl:molangquery:is_alive:bool:true": {},
      "mcwl:molangquery:is_alive:bool:false": {},
      "mcwl:molangquery:is_angry:bool:true": {},
      "mcwl:molangquery:is_angry:bool:false": {},
      "mcwl:molangquery:is_attached_to_entity:bool:true": {},
      "mcwl:molangquery:is_attached_to_entity:bool:false": {},
      "mcwl:molangquery:is_avoiding_block:bool:true": {},
      "mcwl:molangquery:is_avoiding_block:bool:false": {},
      "mcwl:molangquery:is_avoiding_mobs:bool:true": {},
      "mcwl:molangquery:is_avoiding_mobs:bool:false": {},
      "mcwl:molangquery:is_baby:bool:true": {},
      "mcwl:molangquery:is_baby:bool:false": {},
      "mcwl:molangquery:is_breathing:bool:true": {},
      "mcwl:molangquery:is_breathing:bool:false": {},
      "mcwl:molangquery:is_bribed:bool:true": {},
      "mcwl:molangquery:is_bribed:bool:false": {},
      "mcwl:molangquery:is_carrying_block:bool:true": {},
      "mcwl:molangquery:is_carrying_block:bool:false": {},
      "mcwl:molangquery:is_casting:bool:true": {},
      "mcwl:molangquery:is_casting:bool:false": {},
      "mcwl:molangquery:is_celebrating:bool:true": {},
      "mcwl:molangquery:is_celebrating:bool:false": {},
      "mcwl:molangquery:is_celebrating_special:bool:true": {},
      "mcwl:molangquery:is_celebrating_special:bool:false": {},
      "mcwl:molangquery:is_charged:bool:true": {},
      "mcwl:molangquery:is_charged:bool:false": {},
      "mcwl:molangquery:is_charging:bool:true": {},
      "mcwl:molangquery:is_charging:bool:false": {},
      "mcwl:molangquery:is_chested:bool:true": {},
      "mcwl:molangquery:is_chested:bool:false": {},
      "mcwl:molangquery:is_critical:bool:true": {},
      "mcwl:molangquery:is_critical:bool:false": {},
      "mcwl:molangquery:is_croaking:bool:true": {},
      "mcwl:molangquery:is_croaking:bool:false": {},
      "mcwl:molangquery:is_dancing:bool:true": {},
      "mcwl:molangquery:is_dancing:bool:false": {},
      "mcwl:molangquery:is_delayed_attacking:bool:true": {},
      "mcwl:molangquery:is_delayed_attacking:bool:false": {},
      "mcwl:molangquery:is_eating:bool:true": {},
      "mcwl:molangquery:is_eating:bool:false": {},
      "mcwl:molangquery:is_eating_mob:bool:true": {},
      "mcwl:molangquery:is_eating_mob:bool:false": {},
      "mcwl:molangquery:is_elder:bool:true": {},
      "mcwl:molangquery:is_elder:bool:false": {},
      "mcwl:molangquery:is_emoting:bool:true": {},
      "mcwl:molangquery:is_emoting:bool:false": {},
      "mcwl:molangquery:is_enchanted:bool:true": {},
      "mcwl:molangquery:is_enchanted:bool:false": {},
      "mcwl:molangquery:is_fire_immune:bool:true": {},
      "mcwl:molangquery:is_fire_immune:bool:false": {},
      "mcwl:molangquery:is_first_person:bool:true": {},
      "mcwl:molangquery:is_first_person:bool:false": {},
      "mcwl:molangquery:is_ghost:bool:true": {},
      "mcwl:molangquery:is_ghost:bool:false": {},
      "mcwl:molangquery:is_gliding:bool:true": {},
      "mcwl:molangquery:is_gliding:bool:false": {},
      "mcwl:molangquery:is_grazing:bool:true": {},
      "mcwl:molangquery:is_grazing:bool:false": {},
      "mcwl:molangquery:is_idling:bool:true": {},
      "mcwl:molangquery:is_idling:bool:false": {},
      "mcwl:molangquery:is_ignited:bool:true": {},
      "mcwl:molangquery:is_ignited:bool:false": {},
      "mcwl:molangquery:is_illager_captain:bool:true": {},
      "mcwl:molangquery:is_illager_captain:bool:false": {},
      "mcwl:molangquery:is_in_contact_with_water:bool:true": {},
      "mcwl:molangquery:is_in_contact_with_water:bool:false": {},
      "mcwl:molangquery:is_in_love:bool:true": {},
      "mcwl:molangquery:is_in_love:bool:false": {},
      "mcwl:molangquery:is_in_ui:bool:true": {},
      "mcwl:molangquery:is_in_ui:bool:false": {},
      "mcwl:molangquery:is_in_water:bool:true": {},
      "mcwl:molangquery:is_in_water:bool:false": {},
      "mcwl:molangquery:is_in_water_or_rain:bool:true": {},
      "mcwl:molangquery:is_in_water_or_rain:bool:false": {},
      "mcwl:molangquery:is_interested:bool:true": {},
      "mcwl:molangquery:is_interested:bool:false": {},
      "mcwl:molangquery:is_invisible:bool:true": {},
      "mcwl:molangquery:is_invisible:bool:false": {},
      "mcwl:molangquery:is_jumping:bool:true": {},
      "mcwl:molangquery:is_jumping:bool:false": {},
      "mcwl:molangquery:is_laying_down:bool:true": {},
      "mcwl:molangquery:is_laying_down:bool:false": {},
      "mcwl:molangquery:is_laying_egg:bool:true": {},
      "mcwl:molangquery:is_laying_egg:bool:false": {},
      "mcwl:molangquery:is_leashed:bool:true": {},
      "mcwl:molangquery:is_leashed:bool:false": {},
      "mcwl:molangquery:is_levitating:bool:true": {},
      "mcwl:molangquery:is_levitating:bool:false": {},
      "mcwl:molangquery:is_lingering:bool:true": {},
      "mcwl:molangquery:is_lingering:bool:false": {},
      "mcwl:molangquery:is_on_fire:bool:true": {},
      "mcwl:molangquery:is_on_fire:bool:false": {},
      "mcwl:molangquery:is_on_ground:bool:true": {},
      "mcwl:molangquery:is_on_ground:bool:false": {},
      "mcwl:molangquery:is_on_screen:bool:true": {},
      "mcwl:molangquery:is_on_screen:bool:false": {},
      "mcwl:molangquery:is_orphaned:bool:true": {},
      "mcwl:molangquery:is_orphaned:bool:false": {},
      "mcwl:molangquery:is_persona_or_premium_skin:bool:true": {},
      "mcwl:molangquery:is_persona_or_premium_skin:bool:false": {},
      "mcwl:molangquery:is_playing_dead:bool:true": {},
      "mcwl:molangquery:is_playing_dead:bool:false": {},
      "mcwl:molangquery:is_powered:bool:true": {},
      "mcwl:molangquery:is_powered:bool:false": {},
      "mcwl:molangquery:is_pregnant:bool:true": {},
      "mcwl:molangquery:is_pregnant:bool:false": {},
      "mcwl:molangquery:is_ram_attacking:bool:true": {},
      "mcwl:molangquery:is_ram_attacking:bool:false": {},
      "mcwl:molangquery:is_resting:bool:true": {},
      "mcwl:molangquery:is_resting:bool:false": {},
      "mcwl:molangquery:is_riding:bool:true": {},
      "mcwl:molangquery:is_riding:bool:false": {},
      "mcwl:molangquery:is_roaring:bool:true": {},
      "mcwl:molangquery:is_roaring:bool:false": {},
      "mcwl:molangquery:is_rolling:bool:true": {},
      "mcwl:molangquery:is_rolling:bool:false": {},
      "mcwl:molangquery:is_saddled:bool:true": {},
      "mcwl:molangquery:is_saddled:bool:false": {},
      "mcwl:molangquery:is_scared:bool:true": {},
      "mcwl:molangquery:is_scared:bool:false": {},
      "mcwl:molangquery:is_selected_item:bool:true": {},
      "mcwl:molangquery:is_selected_item:bool:false": {},
      "mcwl:molangquery:is_shaking:bool:true": {},
      "mcwl:molangquery:is_shaking:bool:false": {},
      "mcwl:molangquery:is_shaking_wetness:bool:true": {},
      "mcwl:molangquery:is_shaking_wetness:bool:false": {},
      "mcwl:molangquery:is_sheared:bool:true": {},
      "mcwl:molangquery:is_sheared:bool:false": {},
      "mcwl:molangquery:is_shield_powered:bool:true": {},
      "mcwl:molangquery:is_shield_powered:bool:false": {},
      "mcwl:molangquery:is_silent:bool:true": {},
      "mcwl:molangquery:is_silent:bool:false": {},
      "mcwl:molangquery:is_sitting:bool:true": {},
      "mcwl:molangquery:is_sitting:bool:false": {},
      "mcwl:molangquery:is_sleeping:bool:true": {},
      "mcwl:molangquery:is_sleeping:bool:false": {},
      "mcwl:molangquery:is_sneaking:bool:true": {},
      "mcwl:molangquery:is_sneaking:bool:false": {},
      "mcwl:molangquery:is_sneezing:bool:true": {},
      "mcwl:molangquery:is_sneezing:bool:false": {},
      "mcwl:molangquery:is_sprinting:bool:true": {},
      "mcwl:molangquery:is_sprinting:bool:false": {},
      "mcwl:molangquery:is_stackable:bool:true": {},
      "mcwl:molangquery:is_stackable:bool:false": {},
      "mcwl:molangquery:is_stalking:bool:true": {},
      "mcwl:molangquery:is_stalking:bool:false": {},
      "mcwl:molangquery:is_standing:bool:true": {},
      "mcwl:molangquery:is_standing:bool:false": {},
      "mcwl:molangquery:is_stunned:bool:true": {},
      "mcwl:molangquery:is_stunned:bool:false": {},
      "mcwl:molangquery:is_swimming:bool:true": {},
      "mcwl:molangquery:is_swimming:bool:false": {},
      "mcwl:molangquery:is_tamed:bool:true": {},
      "mcwl:molangquery:is_tamed:bool:false": {},
      "mcwl:molangquery:is_transforming:bool:true": {},
      "mcwl:molangquery:is_transforming:bool:false": {},
      "mcwl:molangquery:is_using_item:bool:true": {},
      "mcwl:molangquery:is_using_item:bool:false": {},
      "mcwl:molangquery:is_wall_climbing:bool:true": {},
      "mcwl:molangquery:is_wall_climbing:bool:false": {},
      "mcwl:molangquery:out_of_control:bool:true": {},
      "mcwl:molangquery:out_of_control:bool:false": {},
      "mcwl:molangquery:show_bottom:bool:true": {},
      "mcwl:molangquery:show_bottom:bool:false": {},

      "mcwl:molangquery:health:int:0:true": {},
      "mcwl:molangquery:health:int:0:false": {},
      "mcwl:molangquery:health:int:1:true": {},
      "mcwl:molangquery:health:int:1:false": {},
      "mcwl:molangquery:health:int:2:true": {},
      "mcwl:molangquery:health:int:2:false": {},
      "mcwl:molangquery:health:int:3:true": {},
      "mcwl:molangquery:health:int:3:false": {},
      "mcwl:molangquery:health:int:4:true": {},
      "mcwl:molangquery:health:int:4:false": {},

      "minecraft:gain_bad_omen": {
        "add": {
          "component_groups": ["minecraft:add_bad_omen"]
        }
      },
      "minecraft:clear_add_bad_omen": {
        "remove": {
          "component_groups": ["minecraft:add_bad_omen"]
        },
        "add": {
          "component_groups": ["minecraft:clear_bad_omen_spell_effect"]
        }
      },
      "minecraft:trigger_raid": {
        "add": {
          "component_groups": ["minecraft:raid_trigger"]
        }
      },
      "minecraft:remove_raid_trigger": {
        "remove": {
          "component_groups": ["minecraft:raid_trigger"]
        }
      }
    }
  }
}
